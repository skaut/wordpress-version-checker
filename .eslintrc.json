{
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": false,
    "node": true
  },
  "plugins": [
    "deprecation",
    "jest",
    "prefer-arrow-functions",
    "simple-import-sort",
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:eslint-comments/recommended",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "arrow-body-style": ["error", "as-needed"],
    "camelcase": ["error", {"allow": ["issue_number"]}],
    "no-warning-comments": "warn",
    "strict": ["error", "never"],
    "deprecation/deprecation": "warn",
    "eslint-comments/no-unused-disable": "error",
    "eslint-comments/require-description": "error",
    "prefer-arrow-functions/prefer-arrow-functions": [
      "error",
      {
        "allowNamedFunctions": true
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "@typescript-eslint/array-type": ["error", { "default": "generic" }],
    "@typescript-eslint/class-methods-use-this": "error",
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/init-declarations": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/method-signature-style": ["error", "method"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
	"selector": "default",
	"format": ["camelCase"],
	"leadingUnderscore": "allow",
	"trailingUnderscore": "allow",
        "filter": {
          "regex": "^(GITHUB_REPOSITORY|issue_number)$",
          "match": false
        }
      },

      {
	"selector": "import",
	"format": ["camelCase", "PascalCase"]
      },

      {
	"selector": "variable",
	"format": ["camelCase", "UPPER_CASE"],
	"leadingUnderscore": "allow",
	"trailingUnderscore": "allow"
      },

      {
	"selector": "typeLike",
	"format": ["PascalCase"]
      }
    ],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-loop-func": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unsafe-unary-minus": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/parameter-properties": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/prefer-find": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/sort-type-constituents": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/typedef": "error"
  },
  "overrides": [
    {
      "files": ["__tests__/**/*.json", "__tests__/**/*.test.ts"],
      "parserOptions": {
        "extraFileExtensions": [".json"]
      },
      "extends": [
	"plugin:jest/recommended",
	"plugin:jest/style"
      ],
      "rules": {
	"jest/consistent-test-it": ["error", {"withinDescribe": "test"}],
	"jest/no-duplicate-hooks": "error",
	"jest/no-if": "error",
	"jest/no-test-return-statement": "error",
	"jest/prefer-called-with": "error",
	"jest/prefer-expect-assertions": [
	  "error",
	  {
	    "onlyFunctionsWithAsyncKeyword": true,
            "onlyFunctionsWithExpectInLoop": true,
            "onlyFunctionsWithExpectInCallback": true
	  }
	],
	"jest/prefer-expect-resolves": "error",
	"jest/prefer-hooks-on-top": "error",
	"jest/prefer-spy-on": "error",
	"jest/prefer-strict-equal": "error",
	"jest/require-hook": "error",
	"jest/require-to-throw-message": "error",
	"jest/unbound-method": "error"
      }
    }
  ]
}
